{"version":3,"sources":["components/ContactsList.jsx","components/Filter.jsx","components/ContactForm.jsx","components/Phonebook.jsx","App.js","index.js"],"names":["ContactsList","contacts","onDelete","map","contact","name","number","type","onClick","e","id","Filter","value","onChange","currentTarget","pattern","title","required","ContactsForm","onAddContact","React","useState","setName","setNumber","find","item","toLowerCase","window","alert","nanoid","Phonebook","state","filter","this","includes","setState","newContacts","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","filterContacts","deleteContact","Component","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b1a6c88.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Phonebook.module.css';\r\n\r\nconst ContactsList = ({ contacts, onDelete }) => (\r\n  <ul>\r\n    {contacts.map(contact => (\r\n      <li key={contact.id}>\r\n        {contact.name}: {contact.number}{' '}\r\n        <button type=\"button\" onClick={e => onDelete(contact.id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactsList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <input\r\n    value={value}\r\n    onChange={e => onChange(e.currentTarget.value)}\r\n    type=\"text\"\r\n    name=\"name\"\r\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n    required\r\n  />\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Phonebook.module.css';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst ContactsForm = ({ onAddContact, contacts }) => {\r\n  const [name, setName] = React.useState('');\r\n  const [number, setNumber] = React.useState('');\r\n\r\n  const addContact = () => {\r\n    if (contacts.find(item => item.name.toLowerCase() === name.toLowerCase())) {\r\n      return window.alert(`${name} is already in contacts`);\r\n    } else {\r\n      onAddContact({\r\n        id: nanoid(),\r\n        name,\r\n        number,\r\n      });\r\n      setName('');\r\n      setNumber('');\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <label>Name</label>\r\n      <input\r\n        value={name}\r\n        onChange={e => setName(e.currentTarget.value)}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n      />\r\n      <label>Number</label>\r\n      <input\r\n        value={number}\r\n        onChange={e => setNumber(e.currentTarget.value)}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n      />\r\n      <button type=\"button\" onClick={addContact}>\r\n        Add contact\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsForm;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Phonebook.module.css';\r\nimport { nanoid } from 'nanoid';\r\nimport ContactsList from './ContactsList';\r\nimport Filter from './Filter';\r\nimport ContactsForm from './ContactForm';\r\n\r\nclass Phonebook extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      contacts: [\r\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n      ],\r\n      filter: '',\r\n    };\r\n  }\r\n  filterContacts() {\r\n    return this.state.contacts.filter(item =>\r\n      item.name.toLowerCase().includes(this.state.filter.toLowerCase()),\r\n    );\r\n  }\r\n\r\n  deleteContact(id) {\r\n    this.setState({\r\n      contacts: this.state.contacts.filter(item => item.id !== id),\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    let newContacts = localStorage.getItem('newContacts');\r\n    const parsedContacts = JSON.parse(newContacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n    // let contacts = localStorage.getItem('newContacts');\r\n    // contacts = JSON.parse(contacts);\r\n    // if (contacts) {\r\n    //   this.setState({ contacts });\r\n    // }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('newContacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ContactsForm\r\n          onAddContact={contact =>\r\n            this.setState({\r\n              contacts: [...this.state.contacts, contact],\r\n            })\r\n          }\r\n          contacts={this.state.contacts}\r\n        />\r\n\r\n        <h2>Contacts</h2>\r\n        <h3>Find contacts by name</h3>\r\n        <Filter\r\n          value={this.state.filter}\r\n          onChange={filter => this.setState({ filter })}\r\n        />\r\n        <ContactsList\r\n          contacts={this.filterContacts()}\r\n          onDelete={id => this.deleteContact(id)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Phonebook };\r\n","import React from 'react';\nimport { Phonebook } from './components/Phonebook.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Phonebook />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}